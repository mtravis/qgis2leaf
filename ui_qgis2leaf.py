# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui_qgis2leaf.ui'
#
# Created: Sat Sep 20 21:47:40 2014
#      by: PyQt4 UI code generator 4.10.4
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_qgis2leaf(object):
    def setupUi(self, qgis2leaf):
        qgis2leaf.setObjectName(_fromUtf8("qgis2leaf"))
        qgis2leaf.resize(568, 625)
        self.label = QtGui.QLabel(qgis2leaf)
        self.label.setGeometry(QtCore.QRect(10, 10, 131, 18))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("DejaVu Sans"))
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName(_fromUtf8("label"))
        self.label_2 = QtGui.QLabel(qgis2leaf)
        self.label_2.setGeometry(QtCore.QRect(10, 30, 461, 21))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("DejaVu Sans"))
        self.label_2.setFont(font)
        self.label_2.setObjectName(_fromUtf8("label_2"))
        self.line_3 = QtGui.QFrame(qgis2leaf)
        self.line_3.setGeometry(QtCore.QRect(10, 50, 551, 16))
        self.line_3.setFrameShape(QtGui.QFrame.HLine)
        self.line_3.setFrameShadow(QtGui.QFrame.Sunken)
        self.line_3.setObjectName(_fromUtf8("line_3"))
        self.tab_2 = QtGui.QTabWidget(qgis2leaf)
        self.tab_2.setGeometry(QtCore.QRect(10, 60, 551, 561))
        self.tab_2.setObjectName(_fromUtf8("tab_2"))
        self.tab_app = QtGui.QWidget()
        self.tab_app.setObjectName(_fromUtf8("tab_app"))
        self.listWidget = QtGui.QListWidget(self.tab_app)
        self.listWidget.setGeometry(QtCore.QRect(10, 10, 311, 141))
        self.listWidget.setObjectName(_fromUtf8("listWidget"))
        self.gridLayoutWidget = QtGui.QWidget(self.tab_app)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(10, 166, 531, 361))
        self.gridLayoutWidget.setObjectName(_fromUtf8("gridLayoutWidget"))
        self.gridLayout = QtGui.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setSpacing(10)
        self.gridLayout.setMargin(0)
        self.gridLayout.setObjectName(_fromUtf8("gridLayout"))
        self.radioButton = QtGui.QRadioButton(self.gridLayoutWidget)
        self.radioButton.setObjectName(_fromUtf8("radioButton"))
        self.gridLayout.addWidget(self.radioButton, 1, 2, 1, 1)
        self.horizontalLayout_2 = QtGui.QHBoxLayout()
        self.horizontalLayout_2.setObjectName(_fromUtf8("horizontalLayout_2"))
        self.width_box = QtGui.QLineEdit(self.gridLayoutWidget)
        self.width_box.setObjectName(_fromUtf8("width_box"))
        self.horizontalLayout_2.addWidget(self.width_box)
        self.label_7 = QtGui.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("DejaVu Sans"))
        self.label_7.setFont(font)
        self.label_7.setObjectName(_fromUtf8("label_7"))
        self.horizontalLayout_2.addWidget(self.label_7)
        self.height_box = QtGui.QLineEdit(self.gridLayoutWidget)
        self.height_box.setObjectName(_fromUtf8("height_box"))
        self.horizontalLayout_2.addWidget(self.height_box)
        self.gridLayout.addLayout(self.horizontalLayout_2, 1, 1, 1, 1)
        self.label_9 = QtGui.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("DejaVu Sans"))
        self.label_9.setFont(font)
        self.label_9.setObjectName(_fromUtf8("label_9"))
        self.gridLayout.addWidget(self.label_9, 3, 0, 1, 1)
        self.comboBox_3 = QtGui.QComboBox(self.gridLayoutWidget)
        self.comboBox_3.setObjectName(_fromUtf8("comboBox_3"))
        self.gridLayout.addWidget(self.comboBox_3, 3, 1, 1, 1)
        self.horizontalLayout_4 = QtGui.QHBoxLayout()
        self.horizontalLayout_4.setObjectName(_fromUtf8("horizontalLayout_4"))
        spacerItem = QtGui.QSpacerItem(40, 20, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem)
        self.cancelButton = QtGui.QPushButton(self.gridLayoutWidget)
        self.cancelButton.setObjectName(_fromUtf8("cancelButton"))
        self.horizontalLayout_4.addWidget(self.cancelButton)
        self.gridLayout.addLayout(self.horizontalLayout_4, 10, 1, 1, 1)
        self.lineEdit_2 = QtGui.QLineEdit(self.gridLayoutWidget)
        self.lineEdit_2.setObjectName(_fromUtf8("lineEdit_2"))
        self.gridLayout.addWidget(self.lineEdit_2, 5, 1, 1, 1)
        self.okButton = QtGui.QPushButton(self.gridLayoutWidget)
        self.okButton.setObjectName(_fromUtf8("okButton"))
        self.gridLayout.addWidget(self.okButton, 10, 2, 1, 1)
        self.pushButton_2 = QtGui.QPushButton(self.gridLayoutWidget)
        self.pushButton_2.setObjectName(_fromUtf8("pushButton_2"))
        self.gridLayout.addWidget(self.pushButton_2, 5, 2, 1, 1)
        self.label_3 = QtGui.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("DejaVu Sans"))
        self.label_3.setFont(font)
        self.label_3.setObjectName(_fromUtf8("label_3"))
        self.gridLayout.addWidget(self.label_3, 5, 0, 1, 1)
        self.comboBox = QtGui.QComboBox(self.gridLayoutWidget)
        self.comboBox.setObjectName(_fromUtf8("comboBox"))
        self.gridLayout.addWidget(self.comboBox, 4, 1, 1, 1)
        self.comboBox_2 = QtGui.QComboBox(self.gridLayoutWidget)
        self.comboBox_2.setObjectName(_fromUtf8("comboBox_2"))
        self.gridLayout.addWidget(self.comboBox_2, 2, 1, 1, 1)
        self.label_4 = QtGui.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("DejaVu Sans"))
        self.label_4.setFont(font)
        self.label_4.setObjectName(_fromUtf8("label_4"))
        self.gridLayout.addWidget(self.label_4, 4, 0, 1, 1)
        self.label_6 = QtGui.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("DejaVu Sans"))
        self.label_6.setFont(font)
        self.label_6.setObjectName(_fromUtf8("label_6"))
        self.gridLayout.addWidget(self.label_6, 2, 0, 1, 1)
        self.label_5 = QtGui.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("DejaVu Sans"))
        self.label_5.setFont(font)
        self.label_5.setObjectName(_fromUtf8("label_5"))
        self.gridLayout.addWidget(self.label_5, 1, 0, 1, 1)
        self.label_8 = QtGui.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("DejaVu Sans"))
        self.label_8.setFont(font)
        self.label_8.setObjectName(_fromUtf8("label_8"))
        self.gridLayout.addWidget(self.label_8, 6, 0, 1, 1)
        self.webmap_head = QtGui.QLineEdit(self.gridLayoutWidget)
        self.webmap_head.setObjectName(_fromUtf8("webmap_head"))
        self.gridLayout.addWidget(self.webmap_head, 7, 1, 1, 1)
        self.label_10 = QtGui.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("DejaVu Sans"))
        self.label_10.setFont(font)
        self.label_10.setObjectName(_fromUtf8("label_10"))
        self.gridLayout.addWidget(self.label_10, 7, 0, 1, 1)
        self.webpage_name = QtGui.QLineEdit(self.gridLayoutWidget)
        self.webpage_name.setObjectName(_fromUtf8("webpage_name"))
        self.gridLayout.addWidget(self.webpage_name, 6, 1, 1, 1)
        self.label_11 = QtGui.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("DejaVu Sans"))
        self.label_11.setFont(font)
        self.label_11.setObjectName(_fromUtf8("label_11"))
        self.gridLayout.addWidget(self.label_11, 8, 0, 1, 1)
        self.webmap_subhead = QtGui.QLineEdit(self.gridLayoutWidget)
        self.webmap_subhead.setObjectName(_fromUtf8("webmap_subhead"))
        self.gridLayout.addWidget(self.webmap_subhead, 8, 1, 1, 1)
        self.locate = QtGui.QCheckBox(self.gridLayoutWidget)
        self.locate.setObjectName(_fromUtf8("locate"))
        self.gridLayout.addWidget(self.locate, 2, 2, 1, 1)
        self.line_2 = QtGui.QFrame(self.tab_app)
        self.line_2.setGeometry(QtCore.QRect(10, 150, 531, 16))
        self.line_2.setFrameShape(QtGui.QFrame.HLine)
        self.line_2.setFrameShadow(QtGui.QFrame.Sunken)
        self.line_2.setObjectName(_fromUtf8("line_2"))
        self.getButton = QtGui.QPushButton(self.tab_app)
        self.getButton.setGeometry(QtCore.QRect(340, 10, 81, 31))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 63, 63))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 63, 63))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 63, 63))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        self.getButton.setPalette(palette)
        self.getButton.setObjectName(_fromUtf8("getButton"))
        self.getSizeButton = QtGui.QPushButton(self.tab_app)
        self.getSizeButton.setGeometry(QtCore.QRect(430, 10, 81, 31))
        self.getSizeButton.setObjectName(_fromUtf8("getSizeButton"))
        self.encode2JSON = QtGui.QCheckBox(self.tab_app)
        self.encode2JSON.setGeometry(QtCore.QRect(340, 70, 151, 21))
        self.encode2JSON.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.encode2JSON.setObjectName(_fromUtf8("encode2JSON"))
        self.createcluster = QtGui.QCheckBox(self.tab_app)
        self.createcluster.setGeometry(QtCore.QRect(340, 50, 151, 21))
        self.createcluster.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.createcluster.setObjectName(_fromUtf8("createcluster"))
        self.createlegend = QtGui.QCheckBox(self.tab_app)
        self.createlegend.setGeometry(QtCore.QRect(340, 90, 151, 21))
        self.createlegend.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.createlegend.setObjectName(_fromUtf8("createlegend"))
        self.checkBox = QtGui.QCheckBox(self.tab_app)
        self.checkBox.setEnabled(True)
        self.checkBox.setGeometry(QtCore.QRect(340, 110, 186, 21))
        self.checkBox.setAutoFillBackground(False)
        self.checkBox.setChecked(False)
        self.checkBox.setObjectName(_fromUtf8("checkBox"))
        self.address = QtGui.QCheckBox(self.tab_app)
        self.address.setGeometry(QtCore.QRect(340, 130, 181, 22))
        self.address.setObjectName(_fromUtf8("address"))
        self.tab_2.addTab(self.tab_app, _fromUtf8(""))
        self.tab_settings = QtGui.QWidget()
        self.tab_settings.setObjectName(_fromUtf8("tab_settings"))
        self.label_12 = QtGui.QLabel(self.tab_settings)
        self.label_12.setGeometry(QtCore.QRect(10, 70, 81, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("DejaVu Sans"))
        self.label_12.setFont(font)
        self.label_12.setObjectName(_fromUtf8("label_12"))
        self.lineEdit_3 = QtGui.QLineEdit(self.tab_settings)
        self.lineEdit_3.setGeometry(QtCore.QRect(89, 70, 311, 27))
        self.lineEdit_3.setObjectName(_fromUtf8("lineEdit_3"))
        self.pushButton_3 = QtGui.QPushButton(self.tab_settings)
        self.pushButton_3.setGeometry(QtCore.QRect(400, 70, 31, 27))
        self.pushButton_3.setObjectName(_fromUtf8("pushButton_3"))
        self.okButton_2 = QtGui.QPushButton(self.tab_settings)
        self.okButton_2.setGeometry(QtCore.QRect(433, 70, 111, 27))
        self.okButton_2.setObjectName(_fromUtf8("okButton_2"))
        self.okButton_3 = QtGui.QPushButton(self.tab_settings)
        self.okButton_3.setGeometry(QtCore.QRect(433, 100, 111, 27))
        self.okButton_3.setObjectName(_fromUtf8("okButton_3"))
        self.lineEdit_4 = QtGui.QLineEdit(self.tab_settings)
        self.lineEdit_4.setGeometry(QtCore.QRect(89, 100, 311, 27))
        self.lineEdit_4.setObjectName(_fromUtf8("lineEdit_4"))
        self.pushButton_4 = QtGui.QPushButton(self.tab_settings)
        self.pushButton_4.setGeometry(QtCore.QRect(400, 100, 31, 27))
        self.pushButton_4.setObjectName(_fromUtf8("pushButton_4"))
        self.label_13 = QtGui.QLabel(self.tab_settings)
        self.label_13.setGeometry(QtCore.QRect(10, 100, 81, 27))
        font = QtGui.QFont()
        font.setFamily(_fromUtf8("DejaVu Sans"))
        self.label_13.setFont(font)
        self.label_13.setObjectName(_fromUtf8("label_13"))
        self.textBrowser_2 = QtGui.QTextBrowser(self.tab_settings)
        self.textBrowser_2.setGeometry(QtCore.QRect(10, 10, 531, 51))
        self.textBrowser_2.setObjectName(_fromUtf8("textBrowser_2"))
        self.tab_2.addTab(self.tab_settings, _fromUtf8(""))
        self.tab_help = QtGui.QWidget()
        self.tab_help.setObjectName(_fromUtf8("tab_help"))
        self.textBrowser = QtGui.QTextBrowser(self.tab_help)
        self.textBrowser.setGeometry(QtCore.QRect(10, 10, 531, 511))
        self.textBrowser.setObjectName(_fromUtf8("textBrowser"))
        self.tab_2.addTab(self.tab_help, _fromUtf8(""))
        self.actionLoadList = QtGui.QAction(qgis2leaf)
        self.actionLoadList.setObjectName(_fromUtf8("actionLoadList"))

        self.retranslateUi(qgis2leaf)
        self.tab_2.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(qgis2leaf)

    def retranslateUi(self, qgis2leaf):
        qgis2leaf.setWindowTitle(_translate("qgis2leaf", "qgis2leaf", None))
        self.label.setText(_translate("qgis2leaf", "QGIS 2 Leaflet", None))
        self.label_2.setText(_translate("qgis2leaf", "Export your vector and raster data to a leaflet based webmap", None))
        self.radioButton.setText(_translate("qgis2leaf", "Full Screen", None))
        self.label_7.setText(_translate("qgis2leaf", "/", None))
        self.label_9.setText(_translate("qgis2leaf", "Visible layers:", None))
        self.cancelButton.setText(_translate("qgis2leaf", "Cancel", None))
        self.okButton.setText(_translate("qgis2leaf", "OK", None))
        self.pushButton_2.setText(_translate("qgis2leaf", "...", None))
        self.label_3.setText(_translate("qgis2leaf", "Output project folder:", None))
        self.label_4.setText(_translate("qgis2leaf", "Basemap:", None))
        self.label_6.setText(_translate("qgis2leaf", "Extent:", None))
        self.label_5.setText(_translate("qgis2leaf", "Frame width / height:", None))
        self.label_8.setText(_translate("qgis2leaf", "Webpage name", None))
        self.label_10.setText(_translate("qgis2leaf", "Webmap title", None))
        self.label_11.setText(_translate("qgis2leaf", "Webmap subtitle", None))
        self.locate.setText(_translate("qgis2leaf", "Locate", None))
        self.getButton.setText(_translate("qgis2leaf", "Get Layers", None))
        self.getSizeButton.setText(_translate("qgis2leaf", "Get Size", None))
        self.encode2JSON.setText(_translate("qgis2leaf", "Encode to JSON", None))
        self.createcluster.setText(_translate("qgis2leaf", "Create cluster", None))
        self.createlegend.setText(_translate("qgis2leaf", "Create legend", None))
        self.checkBox.setText(_translate("qgis2leaf", "Create opacity control", None))
        self.address.setText(_translate("qgis2leaf", "Address search field", None))
        self.tab_2.setTabText(self.tab_2.indexOf(self.tab_app), _translate("qgis2leaf", "Export", None))
        self.label_12.setText(_translate("qgis2leaf", "Setup File:", None))
        self.pushButton_3.setText(_translate("qgis2leaf", "...", None))
        self.okButton_2.setText(_translate("qgis2leaf", "Save Setup", None))
        self.okButton_3.setText(_translate("qgis2leaf", "Load Setup", None))
        self.pushButton_4.setText(_translate("qgis2leaf", "...", None))
        self.label_13.setText(_translate("qgis2leaf", "Setup File:", None))
        self.textBrowser_2.setHtml(_translate("qgis2leaf", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">You can save and load your settings using this dialog. Please keep in mind: Layers and layer order will not be saved nor restored.</p></body></html>", None))
        self.tab_2.setTabText(self.tab_2.indexOf(self.tab_settings), _translate("qgis2leaf", "Settings ", None))
        self.textBrowser.setHtml(_translate("qgis2leaf", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"justify\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans\'; font-size:9pt; font-weight:600; text-decoration: underline;\">General help:</span></p>\n"
"<p align=\"justify\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans\'; font-size:9pt;\">QGIS 2 Leaflet creates a webmap from your current QGIS vector features and rasters. Therefore it tries to copy the current vector styles to styles, leaflet will understand. If your data has an attribute called </span><span style=\" font-family:\'Sans\'; font-size:9pt; font-weight:600; font-style:italic;\">html_exp</span><span style=\" font-family:\'Sans\'; font-size:9pt; font-weight:600;\"> </span><span style=\" font-family:\'Sans\'; font-size:9pt;\">it will use this for the</span><span style=\" font-family:\'Sans\'; font-size:9pt; font-weight:600;\"> popup content. </span><span style=\" font-family:\'Sans\'; font-size:9pt;\">Otherwise it will create a </span><span style=\" font-family:\'Sans\'; font-size:9pt; font-weight:600;\">simple table</span><span style=\" font-family:\'Sans\'; font-size:9pt;\"> from all of your attributes and values. Furthermore you can define an </span><span style=\" font-family:\'Sans\'; font-size:9pt; font-weight:600;\">icon for your point</span><span style=\" font-family:\'Sans\'; font-size:9pt;\"> layers using an attribute called </span><span style=\" font-family:\'Sans\'; font-size:9pt; font-weight:600; font-style:italic;\">icon_exp</span><span style=\" font-family:\'Sans\'; font-size:9pt; font-weight:600;\">.</span><span style=\" font-family:\'Sans\'; font-size:9pt;\"> Each feature should have an </span><span style=\" font-family:\'Sans\'; font-size:9pt; font-weight:600;\">absolute path</span><span style=\" font-family:\'Sans\'; font-size:9pt;\"> on your current system or provide a </span><span style=\" font-family:\'Sans\'; font-size:9pt; font-weight:600;\">link to the image</span><span style=\" font-family:\'Sans\'; font-size:9pt;\"> (preferable *.svg or *.png). You may find suitable examples in the test_data folder.</span></p>\n"
"<p align=\"justify\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans\'; font-size:9pt;\">When you\'re interested in building a legend as well, you need to fill the column </span><span style=\" font-family:\'Sans\'; font-size:9pt; font-weight:600; font-style:italic;\">legend_exp</span><span style=\" font-family:\'Sans\'; font-size:9pt;\"> with a text and </span><span style=\" font-family:\'Sans\'; font-size:9pt; font-weight:600; font-style:italic;\">legend_ico</span><span style=\" font-family:\'Sans\'; font-size:9pt;\"> with the path to an icon which should be shown in the legend for the particular layer. This works only for local layers and non-raster layers. See the example files for details.</span></p>\n"
"<p align=\"justify\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans\'; font-size:9pt;\">Raster images will be tranlated to EPSG:4326/jpg using GDAL python bindings.</span></p>\n"
"<p align=\"justify\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Sans\'; font-size:9pt; font-weight:600; text-decoration: underline;\">GUI help:</span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'Sans\'; font-size:9pt;\" align=\"justify\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Press &quot;<span style=\" font-weight:600;\">get layers</span>&quot; to add/reload your vector layers to the plugin. You can select the layers to export.</li>\n"
"<li style=\" font-family:\'Sans\'; font-size:9pt;\" align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Your QGIS project might have a WFS embedded. Check <span style=\" font-weight:600;\">Encode to JSON </span>to create a local copy of the WFS. If unchecked leaflet will use the same WFS in its map.</li>\n"
"<ul type=\"circle\" style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'Sans\'; font-size:9pt;\" align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Frame width</span> defines the map dimension in the html page. Toggle between given pixel values or full screen which corresponds to 100% width of your browser. Press <span style=\" font-weight:600;\">Get Size </span>to set the dimensions of the webmap according to your current QGIS map window.</li></ul>\n"
"<li style=\" font-family:\'Sans\'; font-size:9pt;\" align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Extent: <span style=\" font-weight:600;\">canvas extent - </span>QGIS canvas will influence initial leaflet view / choose <span style=\" font-weight:600;\">layer extent</span> to set the leaflet webmap extent to the extent of all vector layers. Check <span style=\" font-weight:600;\">Locate </span>to set the center of the webmap to the user position (determined by GPS/3G/IP).</li>\n"
"<li style=\" font-family:\'Sans\'; font-size:9pt;\" align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">For large datasets set the <span style=\" font-weight:600;\">visible layers</span> to &quot;show none&quot;. Visibility can be toggled in the webmap afterwards as you have a nice layer switcher.</li>\n"
"<li style=\" font-family:\'Sans\'; font-size:9pt;\" align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Choose one of the available <span style=\" font-weight:600;\">basemaps</span>. </li>\n"
"<li style=\" font-family:\'Sans\'; font-size:9pt;\" align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Opacity of raster images in your map can be changed using the <span style=\" font-weight:600;\">Opacity control</span> which is a slider below your map.</li>\n"
"<li style=\" font-family:\'Sans\'; font-size:9pt;\" align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">As <span style=\" font-weight:600;\">output project folder</span> you should choose a separate folder. There will be a designated folder in it with your current export files and folders.</li>\n"
"<li style=\" font-family:\'Sans\'; font-size:9pt;\" align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Webpage name</span> will be visible in the Tab-header of your webpage. It is extracted from your project title but you can alter it.</li>\n"
"<li style=\" font-family:\'Sans\'; font-size:9pt;\" align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Webmap heading</span> will be displayed in an info box in your webmap. It is extracted from your project title but you can alter it.</li></ul>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'Sans\'; font-size:9pt;\" align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">Webmap subheading</span> will be displayed in an info box in your webmap if webmap heading is provided. It is extracted from your project title but you can alter it.</li></ul></body></html>", None))
        self.tab_2.setTabText(self.tab_2.indexOf(self.tab_help), _translate("qgis2leaf", "Help", None))
        self.actionLoadList.setText(_translate("qgis2leaf", "loadList", None))

